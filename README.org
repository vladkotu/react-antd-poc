
* Portfolio repo
    :PROPERTIES:
    :header-args: :var DBPATH="server/src/db"
    :END:
  This project aim to proof knowledge of NodeJs/React stack
** Start Scripts
   See [[file:package.json][server package.json]] and [[file:client/package.json][client package.json]] "scripts" sections for details.


Start local infrastructure 
#+begin_src sh
docker-compose up -d
#+end_src

Create tables in localstack and seed with data.
Configure aws with secret keys
Change to =production= to create and seed real aws database
#+begin_src sh
NODE_ENV=development yarn db:setup
#+end_src

Start dev server and client code watchers 
#+begin_src sh
yarn dev:all
#+end_src

Starts server separately
#+begin_src sh
yarn nodemon
#+end_src

Run test in watch mode
#+begin_src sh
yarn test --watch
#+end_src

Executes server side code watcher in dev mode.
** React(Hooks) front-end
*** TODO [8/10] Front-end Todo List:
    1. [X] Use React Hooks for state management
    2. [X] Use [[https://ant.design/components/button/][Ant Design]]  components library
    3. [X] Implement reusable Editable list component for admin dashboard
    4. [X] Mock api calls while developing
    5. [X] Integrate BE API
    6. [X] Mock api data with faker.js
    7. [X] Unit tests
    8. [X] React Router
    9. [ ] Functional(end-to-end) tests with cypress
    10. [ ] Sass styling
 
** NodeJs backend
*** TODO [6/9] Backend Todo List
    - [X] CRUD actions
    - [X] ES6 syntax for server side code
    - [X] Request validation/sanitation
      - [X] Single route validation
      - [X] Custom validation middleware
    - [X] Error handling
    - [ ] Unit tests
    - [X] End-to-end API testing
      - [X] Scripts for reseting/seeding database with test data
      - [X] Run docker localstack image before tests
      - [X] Wtite end-to-end tests
    - [X] Migrate app to DynamoDB as main DB
    - [ ] [WAITING] Deploy to AWS lambda (localstack)
*** Upload and host SPA with s3 and CloudFront
**** Create s3 bucket and upload static resources
 Create bucket
 #+begin_src sh :results value code :exports both :eval never-export
 aws s3 mb s3://s3spa.vladkotu.react-antd-poc
 #+end_src

 #+RESULTS:
 #+begin_src sh
 make_bucket: s3spa.vladkotu.react-antd-poc
 #+end_src
    
 #+begin_src sh :results value code :exports both :eval never-export
 aws s3 ls
 #+end_src

 #+RESULTS:
 #+begin_src sh
 2020-03-29 11:29:48 s3spa.vladkotu.react-antd-poc
 #+end_src

 Build and upload FE to s3 bucket:
 #+begin_src sh :results silent :exports code :eval never-export
   cd ./client
   yarn build
 #+end_src

 #+begin_src sh :results value code :exports both :eval never-export
 aws s3 sync ./client/build s3://s3spa.vladkotu.react-antd-poc/site
 #+end_src

 #+RESULTS:
 #+begin_src sh
 Completed 2.2 KiB/10.4 MiB (13.3 KiB/s) with 21 file(s) remainingupload: client/build/index.html to s3://s3spa.vladkotu.react-antd-poc/site/index.html
 Completed 2.2 KiB/10.4 MiB (13.3 KiB/s) with 20 file(s) remainingCompleted 3.4 KiB/10.4 MiB (12.3 KiB/s) with 20 file(s) remainingupload: client/build/static/css/main.234802d7.chunk.css to s3://s3spa.vladkotu.react-antd-poc/site/static/css/main.234802d7.chunk.css
 Completed 3.4 KiB/10.4 MiB (12.3 KiB/s) with 19 file(s) remainingCompleted 3.7 KiB/10.4 MiB (11.5 KiB/s) with 19 file(s) remainingCompleted 4.8 KiB/10.4 MiB (15.0 KiB/s) with 19 file(s) remainingupload: client/build/manifest.json to s3://s3spa.vladkotu.react-antd-poc/site/manifest.json
 Completed 4.8 KiB/10.4 MiB (15.0 KiB/s) with 18 file(s) remainingupload: client/build/favicon.ico to s3://s3spa.vladkotu.react-antd-poc/site/favicon.ico
 Completed 4.8 KiB/10.4 MiB (15.0 KiB/s) with 17 file(s) remainingCompleted 4.9 KiB/10.4 MiB (14.9 KiB/s) with 17 file(s) remainingupload: client/build/robots.txt to s3://s3spa.vladkotu.react-antd-poc/site/robots.txt
 Completed 4.9 KiB/10.4 MiB (14.9 KiB/s) with 16 file(s) remainingCompleted 6.2 KiB/10.4 MiB (18.8 KiB/s) with 16 file(s) remainingupload: client/build/asset-manifest.json to s3://s3spa.vladkotu.react-antd-poc/site/asset-manifest.json
 Completed 6.2 KiB/10.4 MiB (18.8 KiB/s) with 15 file(s) remainingCompleted 7.4 KiB/10.4 MiB (22.2 KiB/s) with 15 file(s) remainingCompleted 8.3 KiB/10.4 MiB (24.9 KiB/s) with 15 file(s) remainingupload: client/build/precache-manifest.b6cd4f8eec56a1a77a0a222c8ec9c154.js to s3://s3spa.vladkotu.react-antd-poc/site/precache-manifest.b6cd4f8eec56a1a77a0a222c8ec9c154.js
 Completed 8.3 KiB/10.4 MiB (24.9 KiB/s) with 14 file(s) remainingupload: client/build/service-worker.js to s3://s3spa.vladkotu.react-antd-poc/site/service-worker.js
 Completed 8.3 KiB/10.4 MiB (24.9 KiB/s) with 13 file(s) remainingCompleted 14.3 KiB/10.4 MiB (39.7 KiB/s) with 13 file(s) remainingupload: client/build/.DS_Store to s3://s3spa.vladkotu.react-antd-poc/site/.DS_Store
 Completed 14.3 KiB/10.4 MiB (39.7 KiB/s) with 12 file(s) remainingCompleted 16.2 KiB/10.4 MiB (36.0 KiB/s) with 12 file(s) remainingupload: client/build/static/css/main.234802d7.chunk.css.map to s3://s3spa.vladkotu.react-antd-poc/site/static/css/main.234802d7.chunk.css.map
 Completed 16.2 KiB/10.4 MiB (36.0 KiB/s) with 11 file(s) remainingCompleted 18.5 KiB/10.4 MiB (40.7 KiB/s) with 11 file(s) remainingupload: client/build/static/js/2.6f3781dd.chunk.js.LICENSE.txt to s3://s3spa.vladkotu.react-antd-poc/site/static/js/2.6f3781dd.chunk.js.LICENSE.txt
 Completed 18.5 KiB/10.4 MiB (40.7 KiB/s) with 10 file(s) remainingCompleted 20.0 KiB/10.4 MiB (40.7 KiB/s) with 10 file(s) remainingupload: client/build/static/js/runtime-main.ced319b4.js to s3://s3spa.vladkotu.react-antd-poc/site/static/js/runtime-main.ced319b4.js
 Completed 20.0 KiB/10.4 MiB (40.7 KiB/s) with 9 file(s) remainingCompleted 28.1 KiB/10.4 MiB (50.7 KiB/s) with 9 file(s) remainingupload: client/build/static/js/runtime-main.ced319b4.js.map to s3://s3spa.vladkotu.react-antd-poc/site/static/js/runtime-main.ced319b4.js.map
 Completed 28.1 KiB/10.4 MiB (50.7 KiB/s) with 8 file(s) remainingCompleted 28.5 KiB/10.4 MiB (51.1 KiB/s) with 8 file(s) remainingupload: client/build/static/media/ReadMe.6ea4de03.md to s3://s3spa.vladkotu.react-antd-poc/site/static/media/ReadMe.6ea4de03.md
 Completed 28.5 KiB/10.4 MiB (51.1 KiB/s) with 7 file(s) remainingCompleted 43.1 KiB/10.4 MiB (66.2 KiB/s) with 7 file(s) remainingupload: client/build/static/js/main.cb9cec13.chunk.js to s3://s3spa.vladkotu.react-antd-poc/site/static/js/main.cb9cec13.chunk.js
 Completed 43.1 KiB/10.4 MiB (66.2 KiB/s) with 6 file(s) remainingCompleted 80.7 KiB/10.4 MiB (86.1 KiB/s) with 6 file(s) remainingupload: client/build/static/js/main.cb9cec13.chunk.js.map to s3://s3spa.vladkotu.react-antd-poc/site/static/js/main.cb9cec13.chunk.js.map
 Completed 80.7 KiB/10.4 MiB (86.1 KiB/s) with 5 file(s) remainingCompleted 127.0 KiB/10.4 MiB (121.1 KiB/s) with 5 file(s) remainingupload: client/build/static/media/logo.64f55a65.svg to s3://s3spa.vladkotu.react-antd-poc/site/static/media/logo.64f55a65.svg
 Completed 127.0 KiB/10.4 MiB (121.1 KiB/s) with 4 file(s) remainingCompleted 383.0 KiB/10.4 MiB (275.7 KiB/s) with 4 file(s) remainingCompleted 639.0 KiB/10.4 MiB (450.8 KiB/s) with 4 file(s) remainingCompleted 895.0 KiB/10.4 MiB (623.8 KiB/s) with 4 file(s) remainingCompleted 1.1 MiB/10.4 MiB (731.1 KiB/s) with 4 file(s) remaining  Completed 1.4 MiB/10.4 MiB (423.0 KiB/s) with 4 file(s) remaining  Completed 1.6 MiB/10.4 MiB (486.5 KiB/s) with 4 file(s) remaining  Completed 1.9 MiB/10.4 MiB (553.5 KiB/s) with 4 file(s) remaining  Completed 2.1 MiB/10.4 MiB (597.1 KiB/s) with 4 file(s) remaining  Completed 2.2 MiB/10.4 MiB (512.0 KiB/s) with 4 file(s) remaining  upload: client/build/static/css/2.1bd2ab2f.chunk.css to s3://s3spa.vladkotu.react-antd-poc/site/static/css/2.1bd2ab2f.chunk.css
 Completed 2.2 MiB/10.4 MiB (512.0 KiB/s) with 3 file(s) remainingCompleted 2.4 MiB/10.4 MiB (552.7 KiB/s) with 3 file(s) remainingCompleted 2.7 MiB/10.4 MiB (572.3 KiB/s) with 3 file(s) remainingCompleted 2.9 MiB/10.4 MiB (596.1 KiB/s) with 3 file(s) remainingCompleted 3.2 MiB/10.4 MiB (618.6 KiB/s) with 3 file(s) remainingCompleted 3.4 MiB/10.4 MiB (641.3 KiB/s) with 3 file(s) remainingCompleted 3.7 MiB/10.4 MiB (678.7 KiB/s) with 3 file(s) remainingCompleted 3.9 MiB/10.4 MiB (714.0 KiB/s) with 3 file(s) remainingCompleted 4.2 MiB/10.4 MiB (733.2 KiB/s) with 3 file(s) remainingCompleted 4.4 MiB/10.4 MiB (764.8 KiB/s) with 3 file(s) remainingCompleted 4.7 MiB/10.4 MiB (807.1 KiB/s) with 3 file(s) remainingCompleted 4.7 MiB/10.4 MiB (780.9 KiB/s) with 3 file(s) remainingupload: client/build/static/css/2.1bd2ab2f.chunk.css.map to s3://s3spa.vladkotu.react-antd-poc/site/static/css/2.1bd2ab2f.chunk.css.map
 Completed 4.7 MiB/10.4 MiB (780.9 KiB/s) with 2 file(s) remainingCompleted 5.0 MiB/10.4 MiB (819.6 KiB/s) with 2 file(s) remainingCompleted 5.2 MiB/10.4 MiB (854.1 KiB/s) with 2 file(s) remainingCompleted 5.5 MiB/10.4 MiB (866.9 KiB/s) with 2 file(s) remainingCompleted 5.7 MiB/10.4 MiB (894.3 KiB/s) with 2 file(s) remainingCompleted 6.0 MiB/10.4 MiB (915.5 KiB/s) with 2 file(s) remainingCompleted 6.2 MiB/10.4 MiB (939.9 KiB/s) with 2 file(s) remainingCompleted 6.5 MiB/10.4 MiB (966.5 KiB/s) with 2 file(s) remainingCompleted 6.7 MiB/10.4 MiB (982.6 KiB/s) with 2 file(s) remainingCompleted 6.8 MiB/10.4 MiB (986.4 KiB/s) with 2 file(s) remainingupload: client/build/static/js/2.6f3781dd.chunk.js to s3://s3spa.vladkotu.react-antd-poc/site/static/js/2.6f3781dd.chunk.js
 Completed 6.8 MiB/10.4 MiB (986.4 KiB/s) with 1 file(s) remainingCompleted 7.1 MiB/10.4 MiB (1004.8 KiB/s) with 1 file(s) remainingCompleted 7.3 MiB/10.4 MiB (1016.6 KiB/s) with 1 file(s) remainingCompleted 7.6 MiB/10.4 MiB (1.0 MiB/s) with 1 file(s) remaining   Completed 7.8 MiB/10.4 MiB (1.0 MiB/s) with 1 file(s) remaining   Completed 8.1 MiB/10.4 MiB (1.0 MiB/s) with 1 file(s) remaining   Completed 8.3 MiB/10.4 MiB (1.0 MiB/s) with 1 file(s) remaining   Completed 8.6 MiB/10.4 MiB (1.1 MiB/s) with 1 file(s) remaining   Completed 8.8 MiB/10.4 MiB (1.1 MiB/s) with 1 file(s) remaining   Completed 9.1 MiB/10.4 MiB (1.1 MiB/s) with 1 file(s) remaining   Completed 9.3 MiB/10.4 MiB (1.1 MiB/s) with 1 file(s) remaining   Completed 9.6 MiB/10.4 MiB (1.1 MiB/s) with 1 file(s) remaining   Completed 9.8 MiB/10.4 MiB (1.1 MiB/s) with 1 file(s) remaining   Completed 10.1 MiB/10.4 MiB (1.1 MiB/s) with 1 file(s) remaining  Completed 10.3 MiB/10.4 MiB (1.2 MiB/s) with 1 file(s) remaining  Completed 10.4 MiB/10.4 MiB (1.1 MiB/s) with 1 file(s) remaining  upload: client/build/static/js/2.6f3781dd.chunk.js.map to s3://s3spa.vladkotu.react-antd-poc/site/static/js/2.6f3781dd.chunk.js.map
 #+end_src


 #+begin_src sh :results value code :exports both :eval never-export
 aws s3 sync ./client/build s3://s3spa.vladkotu.react-antd-poc/site
 #+end_src

*** DynamoDB
**** Create and seed with data tables
***** Accounts table
****** Create accounts table
       Generate json shema for DynamoDB table:
    #+begin_src sh :results value code :eval never-export :exports both
      aws dynamodb create-table --generate-cli-skeleton > ./server/db/table-shema-example.json
    #+end_src

    #+NAME: delete-accounts-table
    #+begin_src sh :results silent :eval never-export :exports both
     aws --endpoint-url http://localhost:4569 \
         dynamodb delete-table \
         --table-name Accounts
    #+end_src

    #+NAME: create-table
    #+begin_src sh :results value org :eval never-export :exports both
     aws --endpoint-url http://localhost:4569 \
         dynamodb create-table \
         --cli-input-json file://${DBPATH}/AccountsSchema.json
    #+end_src

    #+RESULTS: create-table
    #+begin_src org
    {
        "TableDescription": {
            "TableArn": "arn:aws:dynamodb:us-east-1:000000000000:table/Accounts", 
            "AttributeDefinitions": [
                {
                    "AttributeName": "id", 
                    "AttributeType": "S"
                }, 
                {
                    "AttributeName": "accType", 
                    "AttributeType": "S"
                }, 
                {
                    "AttributeName": "createdDateTime", 
                    "AttributeType": "N"
                }
            ], 
            "GlobalSecondaryIndexes": [
                {
                    "IndexSizeBytes": 0, 
                    "IndexName": "accType", 
                    "Projection": {
                        "ProjectionType": "ALL"
                    }, 
                    "ProvisionedThroughput": {
                        "WriteCapacityUnits": 1, 
                        "ReadCapacityUnits": 1
                    }, 
                    "IndexStatus": "ACTIVE", 
                    "KeySchema": [
                        {
                            "KeyType": "HASH", 
                            "AttributeName": "accType"
                        }, 
                        {
                            "KeyType": "RANGE", 
                            "AttributeName": "createdDateTime"
                        }
                    ], 
                    "IndexArn": "arn:aws:dynamodb:ddblocal:000000000000:table/Accounts/index/accType", 
                    "ItemCount": 0
                }
            ], 
            "ProvisionedThroughput": {
                "NumberOfDecreasesToday": 0, 
                "WriteCapacityUnits": 1, 
                "LastIncreaseDateTime": 0.0, 
                "ReadCapacityUnits": 1, 
                "LastDecreaseDateTime": 0.0
            }, 
            "TableSizeBytes": 0, 
            "TableName": "Accounts", 
            "BillingModeSummary": {
                "LastUpdateToPayPerRequestDateTime": 0.0, 
                "BillingMode": "PROVISIONED"
            }, 
            "TableStatus": "ACTIVE", 
            "KeySchema": [
                {
                    "KeyType": "HASH", 
                    "AttributeName": "id"
                }, 
                {
                    "KeyType": "RANGE", 
                    "AttributeName": "createdDateTime"
                }
            ], 
            "ItemCount": 0, 
            "CreationDateTime": 1585250695.159
        }
    }
    #+end_src

    #+RESULTS: create-table
   #+begin_src sh :results value code :eval never-export :exports both 
     aws --endpoint-url http://localhost:4569 \
         dynamodb list-tables
   #+end_src

   #+RESULTS:
   #+begin_src sh
   {
       "TableNames": [
           "Contractors"
       ]
   }
   #+end_src
****** Seed accounts with test data

  #NAME: seed-accounts
  #+begin_src sh :results value code :eval never-export :exports both
     aws --endpoint-url http://localhost:4569 \
         dynamodb batch-write-item \
         --request-items   \
         file://${DBPATH}/AccountsDataSeed.json
  #+end_src

  #+RESULTS:
  #+begin_src sh
  {
      "UnprocessedItems": {}
  }
  #+end_src

  Unfortunately =batch-write-item= limited to 25 operations
****** Quering single item

 #NAME: query-account-by-type
 #+begin_src sh :results value code :eval never-export :exports both
   aws --endpoint-url http://localhost:4569 \
     dynamodb query \
     --table-name Accounts \
     --key-condition-expression "id = :id" \
     --expression-attribute-values  '{":id":{"S": "d83ef3c0-6d35-11ea-9d77-3dffd7d18939"}}'
 #+end_src

 #+RESULTS:
 #+begin_src sh
 {
     "Count": 1, 
     "Items": [
         {
             "comment": {
                 "S": "Facere deleniti blanditiis eum."
             }, 
             "category": {
                 "S": "Sales"
             }, 
             "createdDateTime": {
                 "N": "1446960934025"
             }, 
             "accType": {
                 "S": "default"
             }, 
             "vatPercent": {
                 "N": "49"
             }, 
             "accName": {
                 "S": "Roi Greens Backing Up"
             }, 
             "vatCategoryS": {
                 "S": "S"
             }, 
             "id": {
                 "S": "d83ef3c0-6d35-11ea-9d77-3dffd7d18939"
             }, 
             "accNo": {
                 "N": "55"
             }
         }
     ], 
     "ScannedCount": 1, 
     "ConsumedCapacity": null
 }
 #+end_src
****** Querying accounts from GSI
 #NAME: query-account-by-type
 #+begin_src sh :results value code :eval never-export :exports both
     aws --endpoint-url http://localhost:4569 \
         dynamodb query \
        --table-name Accounts \
        --index-name accType \
        --key-condition-expression "accType = :accType" \
        --expression-attribute-values  '{":accType":{"S":"bookkeeping"}}'
 #+end_src

 #+RESULTS:
 #+begin_src sh
 {
     "Count": 3, 
     "Items": [
         {
             "comment": {
                 "S": "est autem facere"
             }, 
             "category": {
                 "S": "Purchase"
             }, 
             "createdDateTime": {
                 "N": "1329262892304"
             }, 
             "accType": {
                 "S": "bookkeeping"
             }, 
             "vatPercent": {
                 "N": "73"
             }, 
             "accName": {
                 "S": "Agp"
             }, 
             "vatCategoryS": {
                 "S": "P"
             }, 
             "id": {
                 "S": "d83fde20-6d35-11ea-9d77-3dffd7d18939"
             }, 
             "accNo": {
                 "N": "93"
             }
         }, 
         {
             "comment": {
                 "S": "Amet consequatur similique quis nobis nam maxime ut dolor. Vitae sed quo sunt molestias vero tempore minima. Necessitatibus ducimus hic reprehenderit. Hic dolore error animi ut aperiam. Hic inventore sunt ipsa ut recusandae. Sed accusantium et iusto.\n \rUnde neque sequi quidem beatae. Quo repudiandae voluptatem impedit nostrum asperiores nostrum aut magnam odio. At recusandae dolorem sunt debitis sequi totam esse ipsa. Eos repellendus totam aut hic.\n \rConsequatur voluptate sunt ratione est est ad omnis. Debitis animi ut est consequatur. Quos praesentium autem est minus et ea."
             }, 
             "category": {
                 "S": "Purchase"
             }, 
             "createdDateTime": {
                 "N": "1551172226477"
             }, 
             "accType": {
                 "S": "bookkeeping"
             }, 
             "vatPercent": {
                 "N": "22"
             }, 
             "accName": {
                 "S": "Computer Manat Vanuatu"
             }, 
             "vatCategoryS": {
                 "S": "P"
             }, 
             "id": {
                 "S": "d83f41e0-6d35-11ea-9d77-3dffd7d18939"
             }, 
             "accNo": {
                 "N": "66"
             }
         }, 
         {
             "category": {
                 "S": "Purchase"
             }, 
             "createdDateTime": {
                 "N": "1564661196514"
             }, 
             "accType": {
                 "S": "bookkeeping"
             }, 
             "vatPercent": {
                 "N": "88"
             }, 
             "accName": {
                 "S": "Maroon Refined Granite Tuna"
             }, 
             "vatCategoryS": {
                 "S": "P"
             }, 
             "id": {
                 "S": "d83fb710-6d35-11ea-9d77-3dffd7d18939"
             }, 
             "accNo": {
                 "N": "93"
             }
         }
     ], 
     "ScannedCount": 3, 
     "ConsumedCapacity": null
 }
 #+end_src

 Because =createdDateTime= was used as =RANGE= (sorted) key, list of items returned by this query
 sorted descendant by =createdDateTime=

***** Contractors table
****** Create table
    #+NAME: delete-contractors-table
    #+begin_src sh :results silent :eval never-export :exports both
     aws --endpoint-url http://localhost:4569 \
         dynamodb delete-table \
         --table-name Contractors
    #+end_src

    #+NAME: create-contractors-table
    #+begin_src sh :results value code :eval never-export :exports both
     aws --endpoint-url http://localhost:4569 \
         dynamodb create-table \
         --cli-input-json file://${DBPATH}/ContractorsSchema.json
    #+end_src

    #+RESULTS: create-contractors-table
    #+begin_src sh
    {
        "TableDescription": {
            "TableArn": "arn:aws:dynamodb:us-east-1:000000000000:table/Contractors", 
            "AttributeDefinitions": [
                {
                    "AttributeName": "id", 
                    "AttributeType": "S"
                }, 
                {
                    "AttributeName": "createdDateTime", 
                    "AttributeType": "N"
                }
            ], 
            "ProvisionedThroughput": {
                "NumberOfDecreasesToday": 0, 
                "WriteCapacityUnits": 1, 
                "LastIncreaseDateTime": 0.0, 
                "ReadCapacityUnits": 1, 
                "LastDecreaseDateTime": 0.0
            }, 
            "TableSizeBytes": 0, 
            "TableName": "Contractors", 
            "BillingModeSummary": {
                "LastUpdateToPayPerRequestDateTime": 0.0, 
                "BillingMode": "PROVISIONED"
            }, 
            "TableStatus": "ACTIVE", 
            "KeySchema": [
                {
                    "KeyType": "HASH", 
                    "AttributeName": "id"
                }, 
                {
                    "KeyType": "RANGE", 
                    "AttributeName": "createdDateTime"
                }
            ], 
            "ItemCount": 0, 
            "CreationDateTime": 1585243058.528
        }
    }
    #+end_src

   #+begin_src sh :results value code :eval never-export :exports both
     aws --endpoint-url http://localhost:4569 \
         dynamodb list-tables
   #+end_src

   #+RESULTS:
   #+begin_src sh
   {
       "TableNames": [
           "Accounts", 
           "Contractors"
       ]
   }
   #+end_src
****** Seed accounts with test data

  #NAME: seed-accounts
  #+begin_src sh :results value code :eval never-export :exports both
     aws --endpoint-url http://localhost:4569 \
         dynamodb batch-write-item \
         --request-items file://${DBPATH}/ContractorsDataSeed.json
  #+end_src

  #+RESULTS:
  #+begin_src sh
  {
      "UnprocessedItems": {}
  }
  #+end_src
****** Scan all items

 #NAME: scan-all-items
 #+begin_src sh :results value code :eval never-export :exports both
     aws --endpoint-url http://localhost:4569 \
         dynamodb scan \
        --table-name Contractors 
 #+end_src

 #+RESULTS:
 #+begin_src sh
 {
     "Count": 5, 
     "Items": [
         {
             "salary": {
                 "N": "73573"
             }, 
             "createdDateTime": {
                 "N": "1485975663942"
             }, 
             "lname": {
                 "S": "Bogan"
             }, 
             "role": {
                 "S": "Assistant"
             }, 
             "fname": {
                 "S": "Melisa"
             }, 
             "id": {
                 "S": "d83fde23-6d35-11ea-9d77-3dffd7d18939"
             }
         }, 
         {
             "salary": {
                 "N": "66464"
             }, 
             "createdDateTime": {
                 "N": "1541301126353"
             }, 
             "lname": {
                 "S": "Weber"
             }, 
             "role": {
                 "S": "Tech Lead"
             }, 
             "fname": {
                 "S": "Dixie"
             }, 
             "id": {
                 "S": "d83fde22-6d35-11ea-9d77-3dffd7d18939"
             }
         }, 
         {
             "salary": {
                 "N": "87487"
             }, 
             "createdDateTime": {
                 "N": "1355210819473"
             }, 
             "lname": {
                 "S": "Larkin"
             }, 
             "role": {
                 "S": "Assistant"
             }, 
             "fname": {
                 "S": "Louisa"
             }, 
             "id": {
                 "S": "d83fde21-6d35-11ea-9d77-3dffd7d18939"
             }
         }, 
         {
             "salary": {
                 "N": "76169"
             }, 
             "createdDateTime": {
                 "N": "1566826234865"
             }, 
             "lname": {
                 "S": "Gerhold"
             }, 
             "role": {
                 "S": "Developer"
             }, 
             "fname": {
                 "S": "Major"
             }, 
             "id": {
                 "S": "d83fde25-6d35-11ea-9d77-3dffd7d18939"
             }
         }, 
         {
             "salary": {
                 "N": "84469"
             }, 
             "createdDateTime": {
                 "N": "1548899509818"
             }, 
             "lname": {
                 "S": "Kassulke"
             }, 
             "role": {
                 "S": "Sales"
             }, 
             "fname": {
                 "S": "Estefania"
             }, 
             "id": {
                 "S": "d83fde24-6d35-11ea-9d77-3dffd7d18939"
             }
         }
     ], 
     "ScannedCount": 5, 
     "ConsumedCapacity": null
 }
 #+end_src

**** [WAITING] [4/6] Attempt to create stack from cloud formation config on localstack env
     - [X] Use aws-serverless-express custom server for lambda env
     - [X] Mock aws infrastructure with localstack
     - [X] Refactor express server to be able to run it locally without deployment on lambda
     - [X] Crete cloud formation template for s3 SPA hosting
     - [ ] [Failed] Deploy express app to labmda
           lockalstack problems appear on execution cloud formation template
     - [ ] Decouple client code from beckend code 
     - [ ] API Gatewat setup

  List of cloud formation stacks
  #+NAME: end-point-list
  #+begin_src sh :results value code :eval never-export :exports both
    aws --endpoint-url=http://localhost:4581 cloudformation list-stacks
  #+end_src

  #+RESULTS: end-point-list
  : /Users/vladimir/projects/react-examples/rhooks-form-app
  : {
  :     "StackSummaries": []
  : }

  #+begin_src sh :results value code :eval never-export :exports both
  aws cloudformation create-stack \
      --template-body file://cloudformation.yml \
      --stack-name web-stack \
      --endpoint-url=http://localhost:4581
  #+end_src

  #+RESULTS:
  : An error occurred (502) when calling the CreateStack operation (reached max retries: 4): Bad Gateway

  Error log from docker:
  #+RESULTS:
  : local_aws     |   File "/opt/code/localstack/.venv/lib/python3.8/site-packages/moto/cloudformation/utils.py", line 61, in yaml_tag_constructor
  : local_aws     |     return {key: _f(loader, tag, node)}
  : local_aws     |   File "/opt/code/localstack/.venv/lib/python3.8/site-packages/moto/cloudformation/utils.py", line 50, in _f
  : local_aws     |     return node.value.split(".")
  : local_aws     | AttributeError: 'list' object has no attribute 'split'
*** API docs
**** Accounts
     :PROPERTIES:
     :header-args: :var API="http://localhost:5000/api"
     :END:
     All accounts tested for "bookkeeping" type
***** [C] Create account
   #+NAME: create-account 
   #+begin_src sh :results value code :exports both :eval never-export
     curl -X POST -vs "${API}/accounts?type=bookkeeping&pretty" \
          -H 'Content-Type: application/json' \
          -d '{ "accNo": 111, "category": "Purchase", "vatPercent": 11, "vatCategoryS": "P", "accName": "One one one" }'
  #+end_src

   #+RESULTS: create-account
   #+begin_src sh
   {
     "id": "ZDcwNThjNjAtNmY4NS0xMWVhLTkyYWYtOGYyZjgxYjZiODlmLDE1ODUyNDMxMjE3MDI%3D",
     "accType": "bookkeeping",
     "accNo": 111,
     "category": "Purchase",
     "vatPercent": 11,
     "vatCategoryS": "P",
     "accName": "One one one"
   }
   #+end_src

****** Invalid request

   #+NAME: create-account-invalid
   #+begin_src sh :results value code :exports both :eval never-export
     curl -X POST -vsi "${API}/accounts?type=bookkeeping&pretty" \
          -H 'Content-Type: application/json' \
          -d '{ "category": "Purchase" }'
  #+end_src

  #+RESULTS: create-account-invalid
  #+begin_src sh
  HTTP/1.1 422 Unprocessable Entity
  X-Powered-By: Express
  Content-Type: application/json; charset=utf-8
  Content-Length: 130
  ETag: W/"82-HHj2rmNjH457Bv9LJ8U88iWD1J8"
  Date: Thu, 26 Mar 2020 17:19:16 GMT
  Connection: keep-alive
  
  {
    "errors": [
      {
        "msg": "account number should be number",
        "param": "accNo",
        "location": "body"
      }
    ]
  }
  #+end_src

***** [R1] Get all accounts 
    #+NAME: get-all-boo-accounts 
    #+begin_src sh :results value code :exports both :eval never-export
      curl -vsi "${API}/accounts?type=bookkeeping&pretty"
   #+end_src

   #+RESULTS: get-all-boo-accounts
   #+begin_src sh
   HTTP/1.1 200 OK
   X-Powered-By: Express
   Content-Type: application/json; charset=utf-8
   Content-Length: 1744
   ETag: W/"6d0-QOCkXK3Pv5QR27cnmBad8f/vVio"
   Date: Thu, 26 Mar 2020 17:19:25 GMT
   Connection: keep-alive
   
   {
     "items": [
       {
         "id": "ZDgzZmRlMjAtNmQzNS0xMWVhLTlkNzctM2RmZmQ3ZDE4OTM5LDEzMjkyNjI4OTIzMDQ%3D",
         "vatCategoryS": "P",
         "accNo": 93,
         "accName": "Agp",
         "comment": "est autem facere",
         "category": "Purchase",
         "accType": "bookkeeping",
         "vatPercent": 73
       },
       {
         "id": "ZDgzZjQxZTAtNmQzNS0xMWVhLTlkNzctM2RmZmQ3ZDE4OTM5LDE1NTExNzIyMjY0Nzc%3D",
         "vatCategoryS": "P",
         "accNo": 66,
         "accName": "Computer Manat Vanuatu",
         "comment": "Amet consequatur similique quis nobis nam maxime ut dolor. Vitae sed quo sunt molestias vero tempore minima. Necessitatibus ducimus hic reprehenderit. Hic dolore error animi ut aperiam. Hic inventore sunt ipsa ut recusandae. Sed accusantium et iusto.\n \rUnde neque sequi quidem beatae. Quo repudiandae voluptatem impedit nostrum asperiores nostrum aut magnam odio. At recusandae dolorem sunt debitis sequi totam esse ipsa. Eos repellendus totam aut hic.\n \rConsequatur voluptate sunt ratione est est ad omnis. Debitis animi ut est consequatur. Quos praesentium autem est minus et ea.",
         "category": "Purchase",
         "accType": "bookkeeping",
         "vatPercent": 22
       },
       {
         "id": "ZDgzZmI3MTAtNmQzNS0xMWVhLTlkNzctM2RmZmQ3ZDE4OTM5LDE1NjQ2NjExOTY1MTQ%3D",
         "vatCategoryS": "P",
         "accNo": 93,
         "accName": "Maroon Refined Granite Tuna",
         "category": "Purchase",
         "accType": "bookkeeping",
         "vatPercent": 88
       },
       {
         "id": "ZDcwNThjNjAtNmY4NS0xMWVhLTkyYWYtOGYyZjgxYjZiODlmLDE1ODUyNDMxMjE3MDI%3D",
         "vatCategoryS": "P",
         "accNo": 111,
         "accName": "One one one",
         "accType": "bookkeeping",
         "category": "Purchase",
         "vatPercent": 11
       }
     ],
     "count": 4
   }
   #+end_src

***** [R2] Get single account  
    #+NAME: get-one-boo-accounts 
    #+begin_src sh :results value code :exports both :eval never-export 
      curl -vsi "${API}/accounts/ZDgzZWYzYzAtNmQzNS0xMWVhLTlkNzctM2RmZmQ3ZDE4OTM5LDE0NDY5NjA5MzQwMjU%3D/?pretty"
   #+end_src

   #+RESULTS: get-one-boo-accounts
   #+begin_example
   HTTP/1.1 200 OK
   X-Powered-By: Express
   Content-Type: application/json; charset=utf-8
   Content-Length: 275
   ETag: W/"113-8G/9TPw6G+iF1N4VS0htAw7+rJ8"
   Date: Thu, 26 Mar 2020 09:46:09 GMT
   Connection: keep-alive
   
   {
     "id": "ZDgzZWYzYzAtNmQzNS0xMWVhLTlkNzctM2RmZmQ3ZDE4OTM5LDE0NDY5NjA5MzQwMjU%3D",
     "vatCategoryS": "S",
     "accNo": 55,
     "accName": "Roi Greens Backing Up",
     "comment": "Facere deleniti blanditiis eum.",
     "category": "Sales",
     "accType": "default",
     "vatPercent": 49
   }
   #+end_example
***** [U] Update account
   #+NAME: update-account 
   #+begin_src sh :results value code :exports both :eval never-export 
     curl -X PUT -vs "${API}/accounts/ZDgzZWYzYzAtNmQzNS0xMWVhLTlkNzctM2RmZmQ3ZDE4OTM5LDE0NDY5NjA5MzQwMjU%3D/?pretty" \
          -H 'Content-Type: application/json' \
          -d '{ "vatPercent": 111, "accName": "One One One" }'
  #+end_src

  #+RESULTS: update-account
  #+begin_example
  {
    "id": "ZDgzZWYzYzAtNmQzNS0xMWVhLTlkNzctM2RmZmQ3ZDE4OTM5LDE0NDY5NjA5MzQwMjU%3D",
    "vatCategoryS": "S",
    "accNo": 55,
    "accName": "One One One",
    "comment": "Facere deleniti blanditiis eum.",
    "category": "Sales",
    "accType": "default",
    "vatPercent": 111
  }
  #+end_example

****** Invalid request

   #+NAME: update-account-invalid 
   #+begin_src sh :results value code :exports both :eval never-export 
     curl -X PUT -vs "${API}/accounts/?type=bookkeeping&pretty" \
          -H 'Content-Type: application/json' \
          -d '{ "vatPercent": 111, "accName": "One One One" }'
  #+end_src

  #+RESULTS: update-account-invalid
  #+begin_example
  <!DOCTYPE html>
  <html lang="en">
  <head>
  <meta charset="utf-8">
  <title>Error</title>
  </head>
  <body>
  <pre>Cannot PUT /api/accounts/</pre>
  </body>
  </html>
  #+end_example

***** [D] Delete account
   #+NAME: delete-account 
   #+begin_src sh :results value code :exports both :eval never-export 
     curl -X DELETE -vs "${API}/accounts/ZDgzZWYzYzAtNmQzNS0xMWVhLTlkNzctM2RmZmQ3ZDE4OTM5LDE0NDY5NjA5MzQwMjU%3D/?pretty"
  #+end_src

  #+RESULTS: delete-account


  

